<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.18.0603.1943                               -->
<workbook original-version='10.3' source-build='10.3.12 (10300.18.0603.1943)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ts_Milk (ts_Milk)' inline='true' name='federated.1lmhtr003bpvan1eyygny1jxd98e' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ts_Milk' name='excel-direct.1b4sec81fqa5qh1c41ct91lks713'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chaitanya/Desktop/tableau docs/session9/ts_Milk.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1b4sec81fqa5qh1c41ct91lks713' name='ts_Milk' table='[ts_Milk$]' type='table'>
          <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
            <column datatype='real' name='Milk' ordinal='0' />
            <column datatype='date' name='Month' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Milk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk]</local-name>
            <parent-name>[ts_Milk]</parent-name>
            <remote-alias>Milk</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[ts_Milk]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ts_Milk]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B157:no:A1:B157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.490085' measure-ordering='alphabetic' measure-percentage='0.509915' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ts_Milk (ts_Milk)' name='federated.1lmhtr003bpvan1eyygny1jxd98e' />
          </datasources>
          <datasource-dependencies datasource='federated.1lmhtr003bpvan1eyygny1jxd98e'>
            <column datatype='real' name='[Milk]' role='measure' type='quantitative' />
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[Milk]' derivation='Sum' forecast-column-base='[sum:Milk:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Milk]' derivation='Sum' name='[sum:Milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lmhtr003bpvan1eyygny1jxd98e].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lmhtr003bpvan1eyygny1jxd98e].[fVal:sum:Milk:qk]</rows>
        <cols>[federated.1lmhtr003bpvan1eyygny1jxd98e].[tmn:Month:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lmhtr003bpvan1eyygny1jxd98e].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
